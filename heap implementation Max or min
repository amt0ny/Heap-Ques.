package com.company;
import java.util.*;
class HeapImplementation{

    ArrayList<Integer> list;
    
    public HeapImplementation(){
        this.list = new ArrayList<>();
    }
    
    public void add(int num){
        int index = list.size();
        list.add(index,num);
        heapify_after_adding(index);
    }
    public void heapify_after_adding(int index){
        int parent = (index-1)/2;

        if (parent>=0 && list.get(parent)<list.get(index)){
            swap(parent,index);
        }
        if (parent > 0){
            heapify_after_adding(parent);
        }
    }
    public void remove(){
        swap(list.size()-1,0);
        list.remove(list.size()-1);
        if (list.size()>1){
        heapify_after_removing(0);
        }
    }
    public  void heapify_after_removing(int index) {
        int parent = index;
        int left = 2*parent+1;
        int right = 2*parent+2;

        if (left<list.size() && list.get(parent)<list.get(left)) parent = left;
        if (right<list.size() && list.get(parent)<list.get(right)) parent = right;

        if (list.get(parent)>list.get(index)){
            swap(parent,index);
            heapify_after_adding(parent);
        }
    }
    public void swap(int index1, int index2){
        int num1 = list.get(index1);
        int num2 = list.get(index2);
        list.set(index1,num2);
        list.set(index2,num1);
    }
    public int peek(){
        return list.get(0);
    }

    public void print(){
        for (int num: list) {
            System.out.println(num);
        }
    }
    public int size(){
        return list.size();
    }

}
